// <auto-generated />
using System;
using AutoGestion.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoGestion.Migrations
{
    [DbContext(typeof(DbContextAutoGestion))]
    [Migration("20250502221700_InitTable")]
    partial class InitTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AutoGestion.Models.DetalleVoucherPago", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TipoDeduccionId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("VoucherPagoId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("adicionado_por")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("modificado_por")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("TipoDeduccionId");

                    b.HasIndex("VoucherPagoId");

                    b.ToTable("DetalleVoucherPagos");
                });

            modelBuilder.Entity("AutoGestion.Models.Puesto", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<ulong>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Adicionado_por")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Modificado_por")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Puesto");
                });

            modelBuilder.Entity("AutoGestion.Models.SolicitudVacacion", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<bool?>("Aprobado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("EmpleadoId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PuestoId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("PuestoId");

                    b.ToTable("SolicitudVacacion");
                });

            modelBuilder.Entity("AutoGestion.Models.SolicitudVacacionAprobacion", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Comentarios")
                        .HasColumnType("longtext");

                    b.Property<string>("ConfiguracionAprobacionId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmpleadoAprobadorId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("FechaDecision")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("SolicitudVacacionId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguracionAprobacionId");

                    b.HasIndex("EmpleadoAprobadorId");

                    b.HasIndex("SolicitudVacacionId");

                    b.ToTable("SolicitudVacacionAprobacion");
                });

            modelBuilder.Entity("AutoGestion.Models.TipoDeduccion", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<ulong>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Adicionado_por")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Modificado_por")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("TipoDeducciones");
                });

            modelBuilder.Entity("AutoGestion.Models.Usuario", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<bool>("DebeCambiarPassword")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("adicionado_por")
                        .HasColumnType("longtext");

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("empleado_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("modificado_por")
                        .HasColumnType("longtext");

                    b.Property<string>("rol_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("id");

                    b.HasIndex("empleado_id")
                        .IsUnique();

                    b.HasIndex("rol_id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AutoGestion.Models.VoucherPago", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<int>("DiasTrabajados")
                        .HasColumnType("int");

                    b.Property<string>("EmpleadoId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("NetoPagar")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("SalarioDiario")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("SalarioMensual")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("adicionado_por")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("modificado_por")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("VoucherPagos");
                });

            modelBuilder.Entity("ConfiguracionAprobacion", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<ulong>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Adicionado_por")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("nivel")
                        .HasColumnType("int");

                    b.Property<string>("puesto_id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("puesto_id");

                    b.ToTable("ConfiguracionAprobacion");
                });

            modelBuilder.Entity("Empleado", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Vacaciones")
                        .HasColumnType("int");

                    b.Property<ulong>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("adicionado_por")
                        .HasColumnType("longtext");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("jefe_id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("modificado_por")
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("puesto_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("jefe_id");

                    b.HasIndex("puesto_id");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Permiso", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("adicionado_por")
                        .HasColumnType("longtext");

                    b.Property<string>("modificado_por")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RolePermiso", b =>
                {
                    b.Property<string>("RolId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("PermisoId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("RolId", "PermisoId");

                    b.HasIndex("PermisoId");

                    b.ToTable("RolePermiso");
                });

            modelBuilder.Entity("TipoSolicitud", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<ulong>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("adicionado_por")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("modificado_por")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("TipoSolicitud");
                });

            modelBuilder.Entity("AutoGestion.Models.DetalleVoucherPago", b =>
                {
                    b.HasOne("AutoGestion.Models.TipoDeduccion", "TipoDeduccion")
                        .WithMany()
                        .HasForeignKey("TipoDeduccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoGestion.Models.VoucherPago", "VoucherPago")
                        .WithMany("DetallesVoucherPago")
                        .HasForeignKey("VoucherPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDeduccion");

                    b.Navigation("VoucherPago");
                });

            modelBuilder.Entity("AutoGestion.Models.SolicitudVacacion", b =>
                {
                    b.HasOne("Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoGestion.Models.Puesto", "Puesto")
                        .WithMany()
                        .HasForeignKey("PuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("AutoGestion.Models.SolicitudVacacionAprobacion", b =>
                {
                    b.HasOne("ConfiguracionAprobacion", "Configuracion")
                        .WithMany()
                        .HasForeignKey("ConfiguracionAprobacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Empleado", "EmpleadoAprobador")
                        .WithMany()
                        .HasForeignKey("EmpleadoAprobadorId");

                    b.HasOne("AutoGestion.Models.SolicitudVacacion", "SolicitudVacacion")
                        .WithMany("Aprobaciones")
                        .HasForeignKey("SolicitudVacacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Configuracion");

                    b.Navigation("EmpleadoAprobador");

                    b.Navigation("SolicitudVacacion");
                });

            modelBuilder.Entity("AutoGestion.Models.Usuario", b =>
                {
                    b.HasOne("Empleado", "Empleado")
                        .WithOne("Usuario")
                        .HasForeignKey("AutoGestion.Models.Usuario", "empleado_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Role", "Role")
                        .WithMany("Usuarios")
                        .HasForeignKey("rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutoGestion.Models.VoucherPago", b =>
                {
                    b.HasOne("Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("ConfiguracionAprobacion", b =>
                {
                    b.HasOne("AutoGestion.Models.Puesto", "Puesto")
                        .WithMany()
                        .HasForeignKey("puesto_id");

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("Empleado", b =>
                {
                    b.HasOne("Empleado", "Jefe")
                        .WithMany()
                        .HasForeignKey("jefe_id");

                    b.HasOne("AutoGestion.Models.Puesto", "Puesto")
                        .WithMany()
                        .HasForeignKey("puesto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jefe");

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("RolePermiso", b =>
                {
                    b.HasOne("Permiso", "Permiso")
                        .WithMany("RolePermisos")
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Role", "Rol")
                        .WithMany("RolePermisos")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("AutoGestion.Models.SolicitudVacacion", b =>
                {
                    b.Navigation("Aprobaciones");
                });

            modelBuilder.Entity("AutoGestion.Models.VoucherPago", b =>
                {
                    b.Navigation("DetallesVoucherPago");
                });

            modelBuilder.Entity("Empleado", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Permiso", b =>
                {
                    b.Navigation("RolePermisos");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Navigation("RolePermisos");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
